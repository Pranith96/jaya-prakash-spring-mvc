package com.demo.springmvc.controller;

import static org.mockito.Mockito.mock;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;
import org.springframework.web.servlet.ModelAndView;

import com.wdf.springmvc.controller.LoginController;
import com.wdf.springmvc.dto.UserDto;
import com.wdf.springmvc.model.User;
import com.wdf.springmvc.service.UserServiceImpl;

@RunWith(MockitoJUnitRunner.class)
public class LoginControllerTest {

	@InjectMocks
	LoginController loginController;

	@Mock
	UserServiceImpl userServiceImpl;

	@Mock
	HttpServletRequest request;

	@Test
	public void testLoadLoginPage() {
		ModelAndView mav = loginController.loadLoginPage(null);
		Assert.assertEquals("login", mav.getViewName());
	}

	@Test
	public void testLoginUser() throws Exception {
		UserDto userDto = new UserDto();
		User user = null;
		HttpServletRequest request = mock(HttpServletRequest.class);
		HttpSession session = mock(HttpSession.class);
		Mockito.when(userServiceImpl.loginUser(userDto)).thenReturn(user);
		ModelAndView mav = loginController.loginUser(userDto, null);
		Assert.assertEquals("failedloginpage", mav.getViewName());
	}
}
